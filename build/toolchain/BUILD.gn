import("//build/config/compiler.gni")
toolchain("gcc") {
    tool("asm") {
        depfile = "{{output}}.d"
        command = "${crossdev}gcc -MMD -MF $depfile {{defines}} {{include_dirs}} {{asmflags}} -c {{source}} -o {{output}}"
        depsformat = "gcc"
        description = "ASM {{output}}"
        outputs =
            [ "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o" ]
    }

    tool("cc") {
        depfile = "{{output}}.d"
        command = "${crossdev}gcc -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} -c {{source}} -o {{output}}"
        depsformat = "gcc"
        description = "CC {{output}}"
        outputs =
            [ "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o" ]
    }

    tool("cxx") {
        depfile = "{{output}}.d"
        command = "${crossdev}g++ -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
        depsformat = "gcc"
        description = "CXX {{output}}"
        outputs =
            [ "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o" ]
    }

    tool("link") {
        outfile = "{{target_output_name}}{{output_extension}}"
        rspfile = "$outfile.rsp"
        command = "${crossdev}ld {{ldflags}} -o $outfile --start-group @$rspfile {{solibs}} --end-group {{libs}}"
        description = "LINK $outfile"
        default_output_dir = "{{root_out_dir}}"
        rspfile_content = "{{inputs}}"
        outputs = [ outfile ]
        default_output_extension = ".elf"
    }

    tool("alink") {
        outfile = "{{target_output_name}}{{output_extension}}"
        rspfile = "$outfile.rsp"
        command = "${crossdev}ar cr $outfile @$rspfile"
        description = "AR $outfile"
        default_output_dir = "{{root_out_dir}}"
        rspfile_content = "{{inputs}}"
        outputs = [ outfile ]
        default_output_extension = ".a"
        output_prefix = "lib"
    }

    tool("solink") {
        outfile = "{{target_output_name}}{{output_extension}}"
        rspfile = "$outfile.rsp"
        command = "${crossdev}gcc --shared -fPIC -o $outfile @$rspfile"
        description = "SOLINK $outfile"
        default_output_dir = "{{root_out_dir}}"
        rspfile_content = "{{inputs}}"
        outputs = [ outfile ]
        default_output_extension = ".so"
        output_prefix = "lib"
    }

    tool("stamp") {
        command = "touch {{output}}"
        description = "STAMP {{output}}"
    }

    tool("copy") {
        command = "cp -af {{source}} {{output}}"
        description = "COPY  {{source}} {{output}}"
    }
}

toolchain("clang") {

}